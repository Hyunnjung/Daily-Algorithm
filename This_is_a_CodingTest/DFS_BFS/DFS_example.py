# DFS(Depth-First Search) 깊이 우선 탐색
#
# - 그래프에서 깊은 부분을 우선적으로 탐색하는 알고리즘
# - 특정한 경로로 탐색하다가 특정한 상황에서 최대한 깊숙이 들어가서 노드를 방문한 후,
#   다시 돌아가 다른 경로로 탐색하는 알고리즘
# - 스택 자료구조 이용
# - 재귀함수를 이용했을 때 매우 간결하게 구현 가능
#
# * 동작과정
#   1. 탐색 시작 노드를 스택에 삽입하고 방문처리를 함
#   2. 스택의 최상단 노드에 방문하지 않은 인접 노드가 있으면 그 인접 노드를 스택에 넣고
#      방문 처리를 함. 방문하지 않은 인접 노드가 없으면 스택에서 최상단 노드 꺼냄
#   3. 2번의 과정을 더 이상 수행할 수 없을 때까지 반복


# DFS 메서드 정의
def dfs(graph, v, visited):
    # 현재 노드 방문처기
    visited[v] = True
    print(v, end = ' ')
    # 현재 노드와 연결된 다른 노드를 재귀적으로 방문
    for i in graph[v]:
        if not visited[i]:
            dfs(graph, i, visited)

# 각 노드가 연결된 정보를 리스트 자료형으로 표현(2차원 리스트)
graph = [
    ...
]

# 각 노드가 방문된 정보를 리스트 자료형으로 표현(1차원 리스트)
visited = [False] * 9

# 정의된 DFS 함수 호출
dfs(graph,1, visited)